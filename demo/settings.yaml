# This is an example settings YAML

# Path where your master CSV, block-lists, and cache data will be stored
output_path: search

# Locale settings (i.e. USA_ENGLISH, CANADA_ENGLISH, CANADA_FRENCH)
# These are used to define the reference to what code implementation we should
# use for the scraper and the provider
locale:
  CANADA_ENGLISH

# Providers from which to search (i.e. glassdoor, monster)
# NOTE: we will choose domain via locale (i.e. CANADA_ENGLISH --> www.indeed.ca)
providers:
  - indeed
# Also available:
#  - glassdoor
#  - monster

# Job search configuration
search_terms:

  # This is the region you are searching for jobs in, and the distance in km
  # within which to return jobs.
  region:
    province_or_state: "ON"
    city: "waterloo"
    radius: 25  # This is in kilometers (km)

  # These are the terms you would be typing into the website's search field
  # NOTE: we will search with all the provided keywords and format according
  # to the input format of job provider (i.e. the GET URLs).
  keywords:
    - Python
    - Scientist

# Blocked company names
# TODO: refactor --> block_list
company_block_list:
  - "Infox Consulting"

# Logging level options are: critical, error, warning, info, debug, notset
log_level: info

# Keep similar job postings
similar: False

# Skip web-scraping and load a previously saved daily scrape pickle
no_scrape: False

# Recover master-list by accessing all historic scrapes pickles
recover: False

# Saves duplicates removed by tfidf filter to duplicate_list.csv
# TODO: document why this should be done.
save_duplicates: False

# Delaying algorithm configuration
delay_config:
    # Functions used for delaying algorithm: 'constant', 'linear', 'sigmoid'
    function: linear
    # Maximum delay/upper bound for converging random delay
    delay: 5.0
    # Minimum delay/lower bound for random delay
    min_delay: 1.0
    # Random delay
    random: False
    # Converging random delay, only used if 'random' is set to True
    converge: False

# # Proxy settings
# proxy:
#   protocol: https  # NOTE: you can also set to 'http'
#   ip_address: "1.1.1.1"
#   port: '200'
